apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.nodename }}-couchdb
  namespace: {{ .Release.Namespace }}
  labels:
{{ toYaml .Values.labels | indent 4 }}
    release: {{.Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
{{ toYaml .Values.labels | indent 8 }}
    spec:
      containers:
      - name: couchdb
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: NODENAME
            value: {{ .Values.nodename }}
          - name: COUCHDB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.binding.name }}
                key: user
          - name: COUCHDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.binding.name }}
                key: password
        volumeMounts:
          - mountPath: /opt/couchdb/data
            name: couchdb-data
            readOnly: false
        resources:
{{ toYaml .Values.resources | indent 12 }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10
          failureThreshold: 10
      volumes:
        {{ template "couchdbDataVolume" . }}

